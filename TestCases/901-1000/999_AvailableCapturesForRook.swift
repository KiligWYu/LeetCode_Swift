//
//  999_AvailableCapturesForRook.swift
//  TestCases
//
//  Created by ùï∂ùñéùñëùñéùñå on 2/6/24.
//

import XCTest

final class AvailableCapturesForRook: XCTestCase {
  func test_numRookCaptures() throws {
    let solution = Solution_999()
    XCTAssertEqual(
      solution.numRookCaptures(
        [[".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", "p", ".", ".", ".", "."],
         [".", ".", ".", "R", ".", ".", ".", "p"],
         [".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", "p", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", "."]]),
      3)
    XCTAssertEqual(
      solution.numRookCaptures(
        [[".", ".", ".", ".", ".", ".", ".", "."],
         [".", "p", "p", "p", "p", "p", ".", "."],
         [".", "p", "p", "B", "p", "p", ".", "."],
         [".", "p", "B", "R", "B", "p", ".", "."],
         [".", "p", "p", "B", "p", "p", ".", "."],
         [".", "p", "p", "p", "p", "p", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", "."]]),
      0)
    XCTAssertEqual(
      solution.numRookCaptures(
        [[".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", "p", ".", ".", ".", "."],
         [".", ".", ".", "p", ".", ".", ".", "."],
         ["p", "p", ".", "R", ".", "p", "B", "."],
         [".", ".", ".", ".", ".", ".", ".", "."],
         [".", ".", ".", "B", ".", ".", ".", "."],
         [".", ".", ".", "p", ".", ".", ".", "."],
         [".", ".", ".", ".", ".", ".", ".", "."]]),
      3)
  }
}
